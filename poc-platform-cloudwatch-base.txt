#############################################
Start of  /Users/gothamsh/aws-ax-engineering/poc-platform-cloudwatch-base/work/grype_report_result.txt
#############################################

>>>>>> Begin Grype output for /run/scan/src >>>>>>

No vulnerabilities found

<<<<<< End Grype output for /run/scan/src <<<<<<


>>>>>> Begin Grype output for /out/work >>>>>>

No vulnerabilities found

<<<<<< End Grype output for /out/work <<<<<<


>>>>>> Begin Syft output for /run/scan/src >>>>>>

No packages discovered

<<<<<< End Syft output for /run/scan/src <<<<<<


>>>>>> Begin Syft output for /out/work >>>>>>

No packages discovered

<<<<<< End Syft output for /out/work <<<<<<


>>>>>> Begin Semgrep output for /run/scan/src >>>>>>

METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 12 files tracked by git with 1095 Code rules:
                                                                                                                        
  Language      Rules   Files          Origin      Rules                                                                
 ─────────────────────────────        ───────────────────                                                               
  <multilang>      57      20          Community    1095                                                                
  terraform       100       3                                                                                           
  json              4       2                                                                                           
  python          241       1                                                                                           
  php              34       1                                                                                           
                                                                                                                        
                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.
  Scan skipped: 2 files matching .semgrepignore patterns
  For a full list of skipped files, run semgrep with the --verbose flag.

Ran 434 rules on 10 files: 6 findings.
                   
                   
┌─────────────────┐
│ 6 Code Findings │
└─────────────────┘
                                                   
    /run/scan/src/environments/nonprod.tfvars.json 
   ❯❯❱ generic.secrets.security.detected-aws-account-id.detected-aws-account-id
          AWS Account ID detected. While not considered sensitive information, it is important to use them and
          share them carefully. For that reason it would be preferrable avoiding to hardcoded it here.        
          Instead, read the value from an environment variable or keep the value in a separate, private file. 
          Details: https://sg.run/Ro22                                                                        
                                                                                                              
            3┆ "aws_account_id": "<nonprod-aws-account-id>",
                                                
    /run/scan/src/environments/prod.tfvars.json 
   ❯❯❱ generic.secrets.security.detected-aws-account-id.detected-aws-account-id
          AWS Account ID detected. While not considered sensitive information, it is important to use them and
          share them carefully. For that reason it would be preferrable avoiding to hardcoded it here.        
          Instead, read the value from an environment variable or keep the value in a separate, private file. 
          Details: https://sg.run/Ro22                                                                        
                                                                                                              
            3┆ "aws_account_id": "<prod-aws-account-id>",
                                                    
    /run/scan/src/lambda/slack-notification/main.py 
   ❯❯❱ generic.secrets.security.detected-slack-webhook.detected-slack-webhook
          Slack Webhook detected      
          Details: https://sg.run/weWX
                                      
           44┆ #HOOK_URL =                                                                        
               "https://hooks.slack.com/services/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"
   
    ❯❱ python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected
          Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic    
          value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib  
          calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead.
          Details: https://sg.run/dKZZ                                                                        
                                                                                                              
           68┆ response = urlopen(req)
                          
    /run/scan/src/main.tf 
     ❱ terraform.aws.security.aws-lambda-x-ray-tracing-not-active.aws-lambda-x-ray-tracing-not-active
          The AWS Lambda function does not have active X-Ray tracing enabled. X-Ray tracing enables end-to-end
          debugging and analysis of all function activity. This makes it easier to trace the flow of logs and 
          identify bottlenecks, slow downs and timeouts.                                                      
          Details: https://sg.run/wO2Y                                                                        
                                                                                                              
           26┆ resource "aws_lambda_function" "test_lambda" {
           27┆   # If the file is not in the current working directory you will need to include a
           28┆   # path.module in the filename.
           29┆   filename      = "slack_function_payload.zip"
           30┆   function_name = "slack-notification"
           31┆   role          = aws_iam_role.iam_for_lambda.arn
           32┆   handler       = "main.lambda_handler"
           33┆
           34┆   source_code_hash = data.archive_file.lambda.output_base64sha256
           35┆
             [hid 9 additional lines, adjust with --max-lines-per-finding] 
   
    ❯❱ terraform.aws.security.aws-lambda-environment-unencrypted.aws-lambda-environment-unencrypted
          By default, the AWS Lambda Environment is encrypted using AWS-managed keys. However, for added     
          security, it's recommended to configure your own AWS KMS encryption key to protect your environment
          variables in Lambda. You can either create a new aws_kms_key resource or use the ARN of an existing
          key in your AWS account to do so.                                                                  
          Details: https://sg.run/x4lz                                                                       
                                                                                                             
           38┆ environment {
           39┆   variables = {
           40┆     slackChannel = var.slack_channel
           41┆     kmsEncryptedHookUrl = var.slack_token
           42┆   }
           43┆ }


<<<<<< End Semgrep output for /run/scan/src <<<<<<


>>>>>> Begin Semgrep output for /out/work >>>>>>

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 5 files tracked by git with 1095 Code rules:
                                                                                                                        
  Language      Rules   Files          Origin      Rules                                                                
 ─────────────────────────────        ───────────────────                                                               
  <multilang>      55      10          Community    1095                                                                
  python          241       1                                                                                           
                                                                                                                        
                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

Ran 296 rules on 5 files: 5 findings.
                   
                   
┌─────────────────┐
│ 5 Code Findings │
└─────────────────┘
                                      
    /out/work/grype_report_result.txt 
   ❯❯❱ generic.secrets.security.detected-aws-account-id.detected-aws-account-id
          AWS Account ID detected. While not considered sensitive information, it is important to use them and
          share them carefully. For that reason it would be preferrable avoiding to hardcoded it here.        
          Instead, read the value from an environment variable or keep the value in a separate, private file. 
          Details: https://sg.run/Ro22                                                                        
                                                                                                              
           77┆ 3┆ "aws_account_id": "<nonprod-aws-account-id>",
            ⋮┆----------------------------------------
           86┆ 3┆ "aws_account_id": "<prod-aws-account-id>",
   
   ❯❯❱ generic.secrets.security.detected-slack-webhook.detected-slack-webhook
          Slack Webhook detected      
          Details: https://sg.run/weWX
                                      
           94┆ "https://hooks.slack.com/services/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"
                                             
    /out/work/slack_function_payload/main.py 
   ❯❯❱ generic.secrets.security.detected-slack-webhook.detected-slack-webhook
          Slack Webhook detected      
          Details: https://sg.run/weWX
                                      
           44┆ HOOK_URL =                                                                         
               "https://hooks.slack.com/services/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"
   
    ❯❱ python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected
          Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic    
          value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib  
          calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead.
          Details: https://sg.run/dKZZ                                                                        
                                                                                                              
           67┆ response = urlopen(req)


<<<<<< End Semgrep output for /out/work <<<<<<

#############################################
End of  /Users/gothamsh/aws-ax-engineering/poc-platform-cloudwatch-base/work/grype_report_result.txt
#############################################


#############################################
Start of  /Users/gothamsh/aws-ax-engineering/poc-platform-cloudwatch-base/work/js_report_result.txt
#############################################

>>>>>> Begin npm audit output for /run/scan/src >>>>>>


<<<<<< End npm audit output for /run/scan/src <<<<<<


>>>>>> Begin npm audit output for /out/work >>>>>>


<<<<<< End npm audit output for /out/work <<<<<<

#############################################
End of  /Users/gothamsh/aws-ax-engineering/poc-platform-cloudwatch-base/work/js_report_result.txt
#############################################


#############################################
Start of  /Users/gothamsh/aws-ax-engineering/poc-platform-cloudwatch-base/work/py_report_result.txt
#############################################
>>>>>> begin identifyipynb output for Jupyter notebook conversion >>>>>>
Looking for Jupyter notebook files

<<<<<< end identifyipynb output for Jupyter notebook conversion <<<<<<
>>>>>> begin bandit result for /run/scan/src >>>>>>
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.11.7
Run started:2024-02-06 20:09:18.358365

Test results:
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: /run/scan/src/lambda/slack-notification/main.py:68:19
67	    try:
68	        response = urlopen(req)
69	        response.read()

--------------------------------------------------

Code scanned:
	Total lines of code: 43
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 1
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 1
Files skipped (0):
<<<<<< end bandit result for /run/scan/src <<<<<<
>>>>>> begin bandit result for /out/work >>>>>>
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.11.7
Run started:2024-02-06 20:09:20.399762

Test results:
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: /out/work/slack_function_payload/main.py:67:19
66	    try:
67	        response = urlopen(req)
68	        response.read()

--------------------------------------------------

Code scanned:
	Total lines of code: 47
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 1
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 1
Files skipped (0):
<<<<<< end bandit result for /out/work <<<<<<
#############################################
End of  /Users/gothamsh/aws-ax-engineering/poc-platform-cloudwatch-base/work/py_report_result.txt
#############################################


#############################################
Start of  /Users/gothamsh/aws-ax-engineering/poc-platform-cloudwatch-base/work/yaml_report_result.txt
#############################################

>>>>>> Begin yaml scan output for /run/scan/src >>>>>>

starting to investigate ...
found 3 files to scan.  Starting checkov scans ...
>>>>>> begin checkov result for main.tf >>>>>>

       _               _              
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V / 
  \___|_| |_|\___|\___|_|\_\___/ \_/  
                                      
By Prisma Cloud | version: 3.2.12 

terraform scan results:

Passed checks: 19, Failed checks: 7, Skipped checks: 0

Check: CKV_AWS_274: "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy"
	PASSED for resource: aws_iam_role.iam_for_lambda
	File: /main.tf:14-17
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.iam_for_lambda
	File: /main.tf:14-17
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: aws_iam_role.iam_for_lambda
	File: /main.tf:14-17
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in lambda environment"
	PASSED for resource: aws_lambda_function.test_lambda
	File: /main.tf:26-44
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-3
Check: CKV_AWS_363: "Ensure Lambda Runtime is not deprecated"
	PASSED for resource: aws_lambda_function.test_lambda
	File: /main.tf:26-44
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-363
Check: CKV_AWS_364: "Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount"
	PASSED for resource: aws_lambda_permission.slack_lambda_permission
	File: /main.tf:51-57
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-364
Check: CKV_AWS_301: "Ensure that AWS Lambda function is not publicly accessible"
	PASSED for resource: aws_lambda_permission.slack_lambda_permission
	File: /main.tf:51-57
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-301
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint
Check: CKV_AWS_49: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-43
Check: CKV_AWS_1: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-23
Check: CKV_AWS_358: "Ensure GitHub Actions OIDC trust policies only allows actions from a specific known organization"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-358
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-does-not-allow-privilege-escalation
Check: CKV_AWS_283: "Ensure no IAM policies documents allow ALL or any AWS principal permissions to the resource"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-283
Check: CKV_AWS_356: "Ensure no IAM policies documents allow "*" as a statement's resource for restrictable actions"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-credentials-exposure
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-data-exfiltration
Check: CKV2_AWS_56: "Ensure AWS Managed IAMFullAccess IAM policy is not used."
	PASSED for resource: aws_iam_role.iam_for_lambda
	File: /main.tf:14-17
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56
Check: CKV2_AWS_40: "Ensure AWS IAM policy does not allow full IAM privileges"
	PASSED for resource: aws_iam_policy_document.assume_role
	File: /main.tf:1-12
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-40
Check: CKV_AWS_272: "Ensure AWS Lambda function is configured to validate code-signing"
	FAILED for resource: aws_lambda_function.test_lambda
	File: /main.tf:26-44
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-272

		26 | resource "aws_lambda_function" "test_lambda" {
		27 |   # If the file is not in the current working directory you will need to include a
		28 |   # path.module in the filename.
		29 |   filename      = "slack_function_payload.zip"
		30 |   function_name = "slack-notification"
		31 |   role          = aws_iam_role.iam_for_lambda.arn
		32 |   handler       = "main.lambda_handler"
		33 | 
		34 |   source_code_hash = data.archive_file.lambda.output_base64sha256
		35 | 
		36 |   runtime = "python3.10"
		37 | 
		38 |   environment {
		39 |     variables = {
		40 |       slackChannel = var.slack_channel
		41 |       kmsEncryptedHookUrl = var.slack_token
		42 |     }
		43 |   }
		44 | }

Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: aws_lambda_function.test_lambda
	File: /main.tf:26-44
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		26 | resource "aws_lambda_function" "test_lambda" {
		27 |   # If the file is not in the current working directory you will need to include a
		28 |   # path.module in the filename.
		29 |   filename      = "slack_function_payload.zip"
		30 |   function_name = "slack-notification"
		31 |   role          = aws_iam_role.iam_for_lambda.arn
		32 |   handler       = "main.lambda_handler"
		33 | 
		34 |   source_code_hash = data.archive_file.lambda.output_base64sha256
		35 | 
		36 |   runtime = "python3.10"
		37 | 
		38 |   environment {
		39 |     variables = {
		40 |       slackChannel = var.slack_channel
		41 |       kmsEncryptedHookUrl = var.slack_token
		42 |     }
		43 |   }
		44 | }

Check: CKV_AWS_173: "Check encryption settings for Lambda environmental variable"
	FAILED for resource: aws_lambda_function.test_lambda
	File: /main.tf:26-44
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5

		26 | resource "aws_lambda_function" "test_lambda" {
		27 |   # If the file is not in the current working directory you will need to include a
		28 |   # path.module in the filename.
		29 |   filename      = "slack_function_payload.zip"
		30 |   function_name = "slack-notification"
		31 |   role          = aws_iam_role.iam_for_lambda.arn
		32 |   handler       = "main.lambda_handler"
		33 | 
		34 |   source_code_hash = data.archive_file.lambda.output_base64sha256
		35 | 
		36 |   runtime = "python3.10"
		37 | 
		38 |   environment {
		39 |     variables = {
		40 |       slackChannel = var.slack_channel
		41 |       kmsEncryptedHookUrl = var.slack_token
		42 |     }
		43 |   }
		44 | }

Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: aws_lambda_function.test_lambda
	File: /main.tf:26-44
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		26 | resource "aws_lambda_function" "test_lambda" {
		27 |   # If the file is not in the current working directory you will need to include a
		28 |   # path.module in the filename.
		29 |   filename      = "slack_function_payload.zip"
		30 |   function_name = "slack-notification"
		31 |   role          = aws_iam_role.iam_for_lambda.arn
		32 |   handler       = "main.lambda_handler"
		33 | 
		34 |   source_code_hash = data.archive_file.lambda.output_base64sha256
		35 | 
		36 |   runtime = "python3.10"
		37 | 
		38 |   environment {
		39 |     variables = {
		40 |       slackChannel = var.slack_channel
		41 |       kmsEncryptedHookUrl = var.slack_token
		42 |     }
		43 |   }
		44 | }

Check: CKV_AWS_50: "X-Ray tracing is enabled for Lambda"
	FAILED for resource: aws_lambda_function.test_lambda
	File: /main.tf:26-44
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-4

		26 | resource "aws_lambda_function" "test_lambda" {
		27 |   # If the file is not in the current working directory you will need to include a
		28 |   # path.module in the filename.
		29 |   filename      = "slack_function_payload.zip"
		30 |   function_name = "slack-notification"
		31 |   role          = aws_iam_role.iam_for_lambda.arn
		32 |   handler       = "main.lambda_handler"
		33 | 
		34 |   source_code_hash = data.archive_file.lambda.output_base64sha256
		35 | 
		36 |   runtime = "python3.10"
		37 | 
		38 |   environment {
		39 |     variables = {
		40 |       slackChannel = var.slack_channel
		41 |       kmsEncryptedHookUrl = var.slack_token
		42 |     }
		43 |   }
		44 | }

Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: aws_lambda_function.test_lambda
	File: /main.tf:26-44
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		26 | resource "aws_lambda_function" "test_lambda" {
		27 |   # If the file is not in the current working directory you will need to include a
		28 |   # path.module in the filename.
		29 |   filename      = "slack_function_payload.zip"
		30 |   function_name = "slack-notification"
		31 |   role          = aws_iam_role.iam_for_lambda.arn
		32 |   handler       = "main.lambda_handler"
		33 | 
		34 |   source_code_hash = data.archive_file.lambda.output_base64sha256
		35 | 
		36 |   runtime = "python3.10"
		37 | 
		38 |   environment {
		39 |     variables = {
		40 |       slackChannel = var.slack_channel
		41 |       kmsEncryptedHookUrl = var.slack_token
		42 |     }
		43 |   }
		44 | }

Check: CKV_AWS_26: "Ensure all data stored in the SNS topic is encrypted"
	FAILED for resource: aws_sns_topic.slack_notification_topic
	File: /main.tf:47-49
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-15

		47 | resource "aws_sns_topic" "slack_notification_topic" {
		48 |     name = "slack_notification_topic"
		49 | }


<<<<<< end checkov result for main.tf <<<<<<
>>>>>> begin checkov result for versions.tf >>>>>>

       _               _              
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V / 
  \___|_| |_|\___|\___|_|\_\___/ \_/  
                                      
By Prisma Cloud | version: 3.2.12 

terraform scan results:

Passed checks: 1, Failed checks: 0, Skipped checks: 0

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /versions.tf:26-43
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5

<<<<<< end checkov result for versions.tf <<<<<<
>>>>>> begin checkov result for variables.tf >>>>>>

       _               _              
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V / 
  \___|_| |_|\___|\___|_|\_\___/ \_/  
                                      
By Prisma Cloud | version: 3.2.12 


<<<<<< end checkov result for variables.tf <<<<<<
found 0 files to scan.  Skipping cfn_nag scans.

<<<<<< End yaml scan output for /run/scan/src <<<<<<


>>>>>> Begin yaml scan output for /out/work >>>>>>

starting to investigate ...
found 0 files to scan.  Skipping checkov scans.
found 0 files to scan.  Skipping cfn_nag scans.

<<<<<< End yaml scan output for /out/work <<<<<<

#############################################
End of  /Users/gothamsh/aws-ax-engineering/poc-platform-cloudwatch-base/work/yaml_report_result.txt
#############################################


